---
- name: AEM Consolidated Main Creation and Deletion Tasks
  hosts: all
  gather_facts: no
  connection: local

  tasks:
    - name: Create AEM Author Publish Dispatcher Stack
      cloudformation:
        stack_name: "{{ stack_prefix }}-{{ main.stack_name }}"
        region: "{{ aws.region }}"
        state: present
        disable_rollback: true
        template: "../../../../../cloudformation/apps/aem/consolidated/main.yaml"
        template_parameters:
          PrerequisitesStackPrefixParameter: "{{ prerequisites_stack_prefix }}"
          MainStackPrefixParameter: "{{ stack_prefix }}"
          NetworkStackPrefixParameter: "{{ network_stack_prefix }}"
          AuthorPublishDispatcherImageParameter: "{{ ami_ids.author_publish_dispatcher }}"
          AuthorPublishDispatcherInstanceTypeParameter: "{{ author_publish_dispatcher.instance_type }}"
          InboundFromBastionHostSecurityGroupParameter: "{{ compute.inbound_from_bastion_host_security_group }}"
          ComputeKeyPairNameParameter: "{{ compute.key_pair_name }}"
          AuthorPublishDispatcherRootVolSizeParameter: "{{ author_publish_dispatcher.root_vol_size }}"
          AuthorPublishDispatcherDataVolSizeParameter: "{{ author_publish_dispatcher.data_vol_size }}"
          DataBucketNameParameter: "{{ s3.data_bucket_name }}"
          AemAwsStackProvisionerVersionParameter: "{{ library.aem_aws_stack_provisioner_version }}"
          AssociatePublicIpAddressParameter: "{{ author_publish_dispatcher.associate_public_ip_address }}"
          Route53HostedZoneNameParameter: "{{ dns_records.route53_hosted_zone_name }}"
          AuthorPublishDispatcherDNSRecordSetNameParameter: "{{ dns_records.author_publish_dispatcher.record_set_name }}"
          DNSRecordSetTTL: "{{ dns_records.author_publish_dispatcher.ttl }}"
      tags:
      - create

    - name: Check if a Stack Exists
      command: >
            aws cloudformation describe-stacks --stack-name "{{ stack_prefix }}-{{ main.stack_name }}"
                --query 'Stacks[].StackName' --region "{{ aws.region }}"
      ignore_errors: True
      register: stack_query
      tags:
        - delete

    - name: Report Stack Problem
      debug:
        msg: Stack "{{ stack_prefix }}-{{ main.stack_name }}" does not exist or some other errors occured
      when:
        "stack_query.rc != 0"
      tags:
        - delete

    - name: Delete AEM Author Publish Dispatcher Stack
      cloudformation:
        stack_name: "{{ stack_prefix }}-{{ main.stack_name }}"
        region: "{{ aws.region }}"
        state: absent
      when:
        "stack_query.rc == 0"
      tags:
      - delete
